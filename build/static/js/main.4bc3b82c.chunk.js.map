{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","formik","useFormik","initialValues","username","password","onSubmit","values","console","log","alert","validate","errors","email","test","handleSubmit","type","id","name","onChange","handleChange","value","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAwCeA,MApCf,WACE,IAAMC,EAASC,YAAU,CACvBC,cAAe,CACbC,SAAU,GACVC,SAAU,IAEZC,SAAU,SAAAC,GACRC,QAAQC,IAAI,QAAQF,GACpBG,MAAM,mBAERC,SAAU,SAAAJ,GACR,IAAIK,EAAS,GACTL,EAAOM,QAAOD,EAAOC,MAAQ,kBAC7BN,EAAOF,WAAUO,EAAOP,SAAW,kBAIvC,MAHS,eACFS,KAAKP,EAAOM,SAAQD,EAAOC,MAAQ,+BAEnCD,KAIX,OACE,8BACE,uBAAMN,SAAUL,EAAOc,aAAvB,UACE,yCACA,uBAAOC,KAAK,OAAOC,GAAG,aAAaC,KAAK,QAAQC,SAAUlB,EAAOmB,aAAcC,MAAOpB,EAAOM,OAAOM,QACnGZ,EAAOW,OAAOC,MAAQ,qBAAKI,GAAG,aAAYK,MAAO,CAACC,MAAM,OAAlC,SAA2CtB,EAAOW,OAAOC,QAAe,KAC/F,4CACA,uBAAOI,GAAG,WAAWD,KAAK,OAAOE,KAAK,WAAWC,SAAUlB,EAAOmB,aAAcC,MAAOpB,EAAOM,OAAOF,WAAW,uBAC/GJ,EAAOW,OAAOP,SAAW,qBAAKY,GAAG,WAAWK,MAAO,CAACC,MAAM,OAAjC,SAA0CtB,EAAOW,OAAOP,WAAkB,KACpG,wBAAQY,GAAG,YAAYD,KAAK,SAA5B,0BCtBOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4bc3b82c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { useFormik} from 'formik'\r\n\r\nfunction App() {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: '',\r\n      password: ''      \r\n    },\r\n    onSubmit: values =>{\r\n      console.log('form:',values);\r\n      alert('SUCCESS!! \\n\\n' )\r\n    },\r\n    validate: values =>{\r\n      let errors = {};\r\n      if(!values.email) errors.email = 'Field required';\r\n      if(!values.password) errors.password = 'Field required';\r\n      var re = /\\S+@\\S+\\.\\S+/;\r\n      if(!re.test(values.email)) errors.email = 'Username should be an email';\r\n\r\n      return errors;\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div>Email:</div>\r\n        <input type=\"text\" id=\"emailField\" name=\"email\" onChange={formik.handleChange} value={formik.values.email}/>\r\n        {formik.errors.email ? <div id='emailError'style={{color:'red'}}>{formik.errors.email}</div> : null}        \r\n        <div>Password:</div>\r\n        <input id='pswField' type=\"text\" name=\"password\" onChange={formik.handleChange} value={formik.values.password}/><br/>\r\n        {formik.errors.password ? <div id='pswError' style={{color:'red'}}>{formik.errors.password}</div> : null}                \r\n        <button id='submitBtn' type=\"submit\" >Submit</button>\r\n      </form>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}